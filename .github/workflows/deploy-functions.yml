name: Deploy Functions (Default codebase)

on:
  # Manual deployment only to avoid accidental deploys on push
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - staging
          - prod

concurrency:
  group: deploy-functions-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'prod' }}
    
    # Skip deployment for pull requests
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'
          cache-dependency-path: 'kateri-monorepo/yarn.lock'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        working-directory: kateri-monorepo
        run: yarn install --immutable

      - name: Build functions
        working-directory: kateri-monorepo
        run: yarn workspace @kateri/functions build

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set Firebase project
        run: |
          # Set the Firebase project based on environment
          case "${{ inputs.environment || 'prod' }}" in
            "dev")
              firebase use dev --token ${{ secrets.FIREBASE_TOKEN }}
              ;;
            "staging")
              firebase use staging --token ${{ secrets.FIREBASE_TOKEN }}
              ;;
            "prod")
              firebase use prod --token ${{ secrets.FIREBASE_TOKEN }}
              ;;
          esac

      - name: Deploy Firestore rules and indexes
        run: |
          firebase deploy \
            --only firestore:rules,firestore:indexes \
            --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy Functions
        run: |
          firebase deploy \
            --only functions \
            --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Post deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Deployment to ${{ inputs.environment || 'prod' }} completed successfully"
          else
            echo "‚ùå Deployment to ${{ inputs.environment || 'prod' }} failed"
            exit 1
          fi

  notify:
    name: Notify Deployment
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "üöÄ Functions deployed successfully to ${{ inputs.environment || 'prod' }}"
          else
            echo "üí• Function deployment failed"
          fi