name: Deploy Hosting (Live)

on:
  push:
    branches: ["main"]
    paths:
      - "kateri-monorepo/packages/web/**"
      - "firebase.json"
      - ".github/workflows/hosting-live.yml"

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Build and deploy to LIVE
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: kcm-firebase-b7d6a
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      GCP_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Enable Corepack and pin Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.1.0 --activate
          yarn --version

      - name: Cache Yarn (Yarn 4)
        uses: actions/cache@v4
        with:
          path: |
            kateri-monorepo/.yarn/cache
          key: ${{ runner.os }}-yarn4-${{ hashFiles('kateri-monorepo/yarn.lock') }}

      - name: Install dependencies (monorepo)
        working-directory: kateri-monorepo
        shell: bash
        run: |
          set -euo pipefail
          if yarn install --immutable; then
            echo "Immutable install succeeded"
          else
            echo "Immutable install failed (likely lockfile drift). Falling back to non-immutable install to unblock deploy."
            yarn install
            echo "Note: Please commit updated kateri-monorepo/yarn.lock to keep CI immutable in the future."
          fi

      - name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT_EMAIL }}
          project_id: ${{ env.PROJECT_ID }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Sanity check auth context (ADC via gcloud)
        shell: bash
        run: |
          set -euo pipefail
          gcloud config set project "$PROJECT_ID" >/dev/null
          echo "gcloud account:" $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
          gcloud auth print-access-token >/dev/null
          echo "ADC usable via gcloud"

      - name: Preflight IAM for Firebase Hosting
        shell: bash
        run: |
          set -euo pipefail
          POLICY=$(gcloud projects get-iam-policy "$PROJECT_ID" --format=json)
          NEED=()
          for ROLE in roles/firebasehosting.admin roles/viewer; do
            if echo "$POLICY" | grep -q "\"$ROLE\"" && echo "$POLICY" | grep -q "serviceAccount:${GCP_SERVICE_ACCOUNT_EMAIL}"; then
              echo "âœ“ $ROLE"
            else
              echo "MISSING: $ROLE"
              NEED+=("$ROLE")
            fi
          done
          if [ ${#NEED[@]} -gt 0 ]; then
            echo "::error title=Missing IAM roles for Hosting deploy::Grant the following roles to ${GCP_SERVICE_ACCOUNT_EMAIL} on project ${PROJECT_ID}: ${NEED[*]}"
            exit 1
          fi

      - name: Build web app
        working-directory: kateri-monorepo
        run: yarn workspace @kateri/web build

      - name: Deploy Hosting (live)
        run: |
          yarn dlx firebase-tools@13.29.0 deploy \
            --only hosting \
            --project "$PROJECT_ID" \
            --non-interactive \
            --debug
